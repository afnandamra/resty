{"version":3,"sources":["components/header/header.js","components/form/form.js","components/history/history.js","components/results/results.js","components/footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","superagent","require","Form","props","changeMethod","e","setState","method","target","innerHTML","handleSubmit","a","preventDefault","url","value","state","reqBody","body","toLowerCase","send","result","headers","handler","message","console","log","onSubmit","this","type","name","placeholder","rows","cols","id","className","onClick","prompt","React","Component","History","methods","map","val","i","data-testid","urls","Results","src","iconStyle","collapsed","enableClipboard","displayDataTypes","response","Footer","App","handleForm","push","count","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7905358e.chunk.js","sourcesContent":["import './header.scss';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>RESTy</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './form.scss';\nconst superagent = require('superagent');\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      method: '',\n    };\n  }\n\n  changeMethod = (e) => {\n    this.setState({ method: e.target.innerHTML });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({\n      url: e.target.url.value,\n      method: this.state.method,\n    });\n    try {\n      let reqBody = e.target.body.value;\n      if (this.state.method === 'POST' || this.state.method === 'PUT') {\n        const result = await superagent[this.state.method.toLowerCase()](\n          e.target.url.value\n        ).send(reqBody)\n        let { headers, body } = result;\n        this.props.handler(headers, body, this.state);\n      } else {\n        const result = await superagent[this.state.method.toLowerCase()](\n          e.target.url.value\n        );\n        let { headers, body } = result;\n        this.props.handler(headers, body, this.state);\n      }\n      // const raw = await fetch(e.target.url.value, {\n      //   // method: this.state.method,\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      // });\n    } catch (e) {\n      this.props.handler(null, e.message, this.state);\n      console.log(e.message);\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <fieldset>\n        <label>URL:</label>\n        <input\n          type=\"text\"\n          name=\"url\"\n          placeholder=\"http://api.url.here\"\n        />\n        <textarea type=\"text\" name=\"body\" placeholder=\"Request body...\" rows=\"6\" cols=\"40\" />\n        <div id=\"rest-buttons\">\n          <span\n            className={`button ${this.state.method === 'GET'}`}\n            onClick={this.changeMethod}\n          >\n            GET\n          </span>\n          <span\n            className={`button ${this.state.method === 'POST'}`}\n            onClick={this.changeMethod}\n          >\n            POST\n          </span>\n          <span\n            className={`button ${this.state.method === 'PUT'}`}\n            onClick={this.changeMethod}\n          >\n            PUT\n          </span>\n          <span\n            className={`button ${this.state.method === 'DELETE'}`}\n            onClick={this.changeMethod}\n          >\n            DELETE\n          </span>\n        </div>\n        <button type=\"submit\">{this.props.prompt}</button>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport './history.scss';\n\nfunction History({ props }) {\n  return (\n    <section id=\"history\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"fwidth\">Method</th>\n            <th>URL</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.methods.map((val, i) => {\n            return (\n              <tr key={i} data-testid=\"url\">\n                <td className=\"fwidth\">{val}</td>\n                <td>{props.urls[i]}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n\nexport default History;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport './results.scss';\n\nfunction Results({ props }) {\n  return (\n    <section id=\"resultSec\" data-testid=\"resultSec\">\n      <ReactJson\n        src={props.headers}\n        name=\"Headers\"\n        iconStyle={'triangle'}\n        collapsed={false}\n        enableClipboard={false}\n        displayDataTypes={false}\n      />\n      <ReactJson\n        src={props.response}\n        name=\"Response\"\n        // theme={\"grayscale:inverted\"}\n        iconStyle={'triangle'}\n        collapsed={false}\n        enableClipboard={false}\n        displayDataTypes={false}\n      />\n    </section>\n  );\n}\n\nexport default Results;\n","import './footer.scss';\nconst Footer = () => <footer><p>&copy; 2021 Code Fellows</p></footer>;\n\nexport default Footer;","import React from 'react';\nimport './App.scss';\n\nimport Header from './components/header/header';\nimport Form from './components/form/form';\nimport History from './components/history/history';\nimport Results from './components/results/results';\nimport Footer from './components/footer/footer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      headers: {},\n      response: [],\n      urls: [],\n      methods: [],\n    };\n  }\n  handleForm = (headers, body, state) => {\n    // console.log(headers, body, state.url, state.method);\n    this.state.urls.push(state.url);\n    this.state.methods.push(state.method);\n    if (headers && body) {\n      this.setState({\n        count: body.count || this.state.count + 1,\n        headers: headers,\n        response: body,\n      });\n    } else {\n      this.setState({\n        count: this.state.count + 1,\n        headers: {message: 'Not Available'},\n        response: body\n      })\n    }\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        <main>\n          <Form prompt=\"GO!\" handler={this.handleForm} />\n          <section id=\"results\">\n            <History\n              props={{ urls: this.state.urls, methods: this.state.methods }}\n            />\n            <Results props={this.state} />\n          </section>\n        </main>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}